syntax = "proto3";

package ffi.ffi;

option go_package = "./";

//General request

message AccessListItem {
  repeated bytes storageSlot = 1;
  bytes address = 2;
}

message TransactionData {
  bytes from = 1;
  bytes to = 2;
  bytes data = 3;
  uint64 gasLimit = 4;
  bytes value = 5;
  repeated AccessListItem accessList = 6;
}

// Log represents an protobuf compatible Ethereum Log that defines a contract
// log event.
// Copied from `devnet/proto``
message Log {
  // address of the contract that generated the event
  string address = 1;
  // list of topics provided by the contract.
  repeated string topics = 2;
  // supplied by the contract, usually ABI-encoded
  bytes data = 3;
}

message HandleTransactionResponse {
  // logs contains the transaction hash and the proto-compatible ethereum
  // logs.
  repeated Log logs = 2;
  // returned data from evm function (result or data supplied with revert
  // opcode)
  bytes ret = 3;
  // vm error is the error returned by vm execution
  string vm_error = 4;
  // gas consumed by the transaction
  uint64 gas_used = 5;
}

// Request for account code (smart contract deployed behind provided address)
message QueryGetAccount {
  // 20 bytes of account address
  bytes address = 1;
}

// Response for account code
message QueryGetAccountResponse {
  // Since both fields are 256-bit unsigned integer, we encode them as big-endian bytes
  bytes balance = 1;
  bytes nonce = 2;
}

message FFIRequest {
  oneof req {
    TransactionData handleTransaction = 1;
  }
}
